/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'cristianoliveira' at '21/02/15 23:44' with Gradle 2.2.1
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/2.2.1/userguide/tutorial_java_projects.html
 */
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'

// Variables
group = "br.com.datapoa"
archivesBaseName = "datapoa-java-client"
version = "1.0.2"

// In this section you declare where to find the dependencies of your project
repositories {
	// Use 'jcenter' for resolving your dependencies.
	// You can declare any Maven/Ivy/file repository here.
	mavenCentral()

    //jcenter()

    maven {
        url "https://jcenter.bintray.com"
    }
}

dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.7'
	compile 'com.google.code.gson:gson:2.3.1'
	// Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile "junit:junit:4.11"
    testCompile "org.mockito:mockito-core:1.+"

}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

/*
signing {
    signing.keyId=System.getenv('SIGN_KEY_ID')
    signing.password=System.getenv('SIGN_KEY_PASSWORD')
    signing.secretKeyRingFile="~/.gnupg/secring.gpg"
}

uploadArchives {
    repositories {
      mavenDeployer {
        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
  
        repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
          authentication(userName: System.getenv('OSSRH_USER_NAME'), password: System.getenv('OSSRH_PASSWORD'))
        }
  
        snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
          authentication(userName: System.getenv('OSSRH_USER_NAME'), password: System.getenv('OSSRH_PASSWORD'))
        }
  
        pom.project {
          name 'DataPoa Java Client'
          packaging 'jar'
          // optionally artifactId can be defined here
          description 'The DataPoa Client Library for Java is a flexible, efficient, and powerful Open Source Java client library for accessing Porto Alegres open data.'
          url 'https://github.com/DataPoa/datapoa-java-client'
  
          scm {
            connection 'https://github.com/DataPoa/datapoa-java-client.git'
            developerConnection 'https://github.com/DataPoa/datapoa-java-client.git'
            url 'https://github.com/DataPoa/datapoa-java-client'
          }
  
          licenses {
            license {
              name 'MIT'
              url 'http://opensource.org/licenses/MIT'
            }
          }
  
          developers {
            developer {
              id 'CristianOliveiraDaRosa'
              name 'Cristian Oliveira da Rosa'
              email 'contato@cristianoliveira.com.br'
            }
          }
        }
      }
    }
  }
*/


